buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = "1.16.1-${verspec}.${verbuild}"
group = "me.towdium.jecharacters"
archivesBaseName = "jecharacters"

sourceCompatibility = targetCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'http://dvs1.progwml6.com/files/maven' }
    maven { url = 'https://www.dogforce-games.com/maven' } //Temporary mappings
}

configurations {
    shade
    compile.extendsFrom shade
}

minecraft {
    mappings channel: 'snapshot', version: '20200813-1.16.1'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods {
                jecharacters {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods {
                jecharacters {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'jecharacters', '--all', '--output', file('src/generated/resources/')
            mods {
                jecharacters {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    shade "me.towdium.pinin:pinin:${verpinin}"
    minecraft 'net.minecraftforge:forge:1.16.1-32.0.108'
    implementation fg.deobf('mezz.jei:jei-1.16.1:7.0.1.10')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes([
                "Specification-Title": 'Just Enough Characters',
                "Specification-Vendor": 'Towdium',
                "Specification-Version": "${verspec}",
                "Implementation-Title": project.name,
                "Implementation-Version": "${verspec}.${verbuild}",
                "Implementation-Vendor" : 'Towdium',
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            include 'me/towdium/pinin/**'
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task generate(type:Exec) {
    commandLine 'python', 'generate.py'
}

compileJava.dependsOn generate
